# V√©rification rapide du support Debug
# Fichier : UpdatesFaciles/Fix-DebugSupport.ps1

$content = Get-Content "App.xaml.ps1" -Raw

Write-Host "üîç V√©rification du support Debug..." -ForegroundColor Cyan

# Test 1: Param√®tre Debug
if ($content -match "\[switch\]\$Debug") {
    Write-Host "‚úÖ Param√®tre [switch]`$Debug trouv√©" -ForegroundColor Green
} else {
    Write-Host "‚ùå Param√®tre [switch]`$Debug manquant" -ForegroundColor Red
}

# Test 2: Utilisation Debug
$debugMatches = [regex]::Matches($content, "if.*\$Debug.*Write-Host", [System.Text.RegularExpressions.RegexOptions]::IgnoreCase)
Write-Host "üîç Nombre d'utilisations Debug trouv√©es : $($debugMatches.Count)" -ForegroundColor Yellow

if ($debugMatches.Count -gt 0) {
    Write-Host "‚úÖ Support Debug op√©rationnel" -ForegroundColor Green
    foreach ($match in $debugMatches[0..2]) {  # Afficher les 3 premiers
        $line = $content.Substring(0, $match.Index).Split("`n").Count
        Write-Host "   Ligne ~$line : $($match.Value)" -ForegroundColor Gray
    }
} else {
    Write-Host "‚ùå Aucune utilisation de Debug trouv√©e" -ForegroundColor Red
}

# Test alternatif plus permissif
$debugAlternative = [regex]::Matches($content, "\$Debug.*Write-Host.*DEBUG", [System.Text.RegularExpressions.RegexOptions]::IgnoreCase)
Write-Host "üîç Test alternatif Debug : $($debugAlternative.Count) matches" -ForegroundColor Yellow

if ($debugAlternative.Count -gt 0) {
    Write-Host "‚úÖ Support Debug confirm√© (regex alternative)" -ForegroundColor Green
} else {
    Write-Host "‚ùå Support Debug non d√©tect√©" -ForegroundColor Red
}